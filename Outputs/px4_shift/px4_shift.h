/** @file
 *  @brief MAVLink comm protocol generated from px4_shift.xml
 *  @see http://mavlink.org
 */
#pragma once
#ifndef MAVLINK_PX4_SHIFT_H
#define MAVLINK_PX4_SHIFT_H

#ifndef MAVLINK_H
    #error Wrong include order: MAVLINK_PX4_SHIFT.H MUST NOT BE DIRECTLY USED. Include mavlink.h from the same directory instead or set ALL AND EVERY defines from MAVLINK.H manually accordingly, including the #define MAVLINK_H call.
#endif

#undef MAVLINK_THIS_XML_IDX
#define MAVLINK_THIS_XML_IDX 0

#ifdef __cplusplus
extern "C" {
#endif

// MESSAGE LENGTHS AND CRCS

#ifndef MAVLINK_MESSAGE_LENGTHS
#define MAVLINK_MESSAGE_LENGTHS {}
#endif

#ifndef MAVLINK_MESSAGE_CRCS
#define MAVLINK_MESSAGE_CRCS {{0, 50, 9, 0, 0, 0}, {1, 124, 31, 0, 0, 0}, {2, 137, 12, 0, 0, 0}, {4, 237, 14, 3, 12, 13}, {5, 217, 28, 1, 0, 0}, {6, 104, 3, 0, 0, 0}, {7, 119, 32, 0, 0, 0}, {11, 89, 6, 1, 4, 0}, {20, 214, 20, 3, 2, 3}, {21, 159, 2, 3, 0, 1}, {22, 220, 25, 0, 0, 0}, {23, 168, 23, 3, 4, 5}, {24, 24, 30, 0, 0, 0}, {25, 23, 101, 0, 0, 0}, {26, 170, 22, 0, 0, 0}, {27, 144, 26, 0, 0, 0}, {28, 67, 16, 0, 0, 0}, {29, 115, 14, 0, 0, 0}, {30, 39, 28, 0, 0, 0}, {31, 246, 32, 0, 0, 0}, {32, 185, 28, 0, 0, 0}, {33, 104, 28, 0, 0, 0}, {34, 237, 22, 0, 0, 0}, {35, 244, 22, 0, 0, 0}, {36, 222, 21, 0, 0, 0}, {37, 212, 6, 3, 4, 5}, {38, 9, 6, 3, 4, 5}, {39, 254, 37, 3, 32, 33}, {40, 230, 4, 3, 2, 3}, {41, 28, 4, 3, 2, 3}, {42, 28, 2, 0, 0, 0}, {43, 132, 2, 3, 0, 1}, {44, 221, 4, 3, 2, 3}, {45, 232, 2, 3, 0, 1}, {46, 11, 2, 0, 0, 0}, {47, 153, 3, 3, 0, 1}, {48, 41, 13, 1, 12, 0}, {49, 39, 12, 0, 0, 0}, {50, 78, 37, 3, 18, 19}, {51, 196, 4, 3, 2, 3}, {54, 15, 27, 3, 24, 25}, {55, 3, 25, 0, 0, 0}, {61, 167, 72, 0, 0, 0}, {62, 183, 26, 0, 0, 0}, {63, 119, 181, 0, 0, 0}, {64, 191, 225, 0, 0, 0}, {65, 118, 42, 0, 0, 0}, {66, 148, 6, 3, 2, 3}, {67, 21, 4, 0, 0, 0}, {69, 243, 11, 0, 0, 0}, {70, 124, 18, 3, 16, 17}, {73, 38, 37, 3, 32, 33}, {74, 20, 20, 0, 0, 0}, {75, 158, 35, 3, 30, 31}, {76, 152, 33, 3, 30, 31}, {77, 143, 3, 0, 0, 0}, {81, 106, 22, 0, 0, 0}, {82, 49, 39, 3, 36, 37}, {83, 22, 37, 0, 0, 0}, {84, 143, 53, 3, 50, 51}, {85, 140, 51, 0, 0, 0}, {86, 5, 53, 3, 50, 51}, {87, 150, 51, 0, 0, 0}, {89, 231, 28, 0, 0, 0}, {90, 183, 56, 0, 0, 0}, {91, 63, 42, 0, 0, 0}, {92, 54, 33, 0, 0, 0}, {93, 47, 81, 0, 0, 0}, {100, 175, 26, 0, 0, 0}, {101, 102, 32, 0, 0, 0}, {102, 158, 32, 0, 0, 0}, {103, 208, 20, 0, 0, 0}, {104, 56, 32, 0, 0, 0}, {105, 93, 62, 0, 0, 0}, {106, 138, 44, 0, 0, 0}, {107, 108, 64, 0, 0, 0}, {108, 32, 84, 0, 0, 0}, {109, 185, 9, 0, 0, 0}, {110, 84, 254, 3, 1, 2}, {111, 34, 16, 0, 0, 0}, {112, 174, 12, 0, 0, 0}, {113, 124, 36, 0, 0, 0}, {114, 237, 44, 0, 0, 0}, {115, 4, 64, 0, 0, 0}, {116, 76, 22, 0, 0, 0}, {117, 128, 6, 3, 4, 5}, {118, 56, 14, 0, 0, 0}, {119, 116, 12, 3, 10, 11}, {120, 134, 97, 0, 0, 0}, {121, 237, 2, 3, 0, 1}, {122, 203, 2, 3, 0, 1}, {123, 250, 113, 3, 0, 1}, {124, 87, 35, 0, 0, 0}, {125, 203, 6, 0, 0, 0}, {126, 220, 79, 0, 0, 0}, {127, 25, 35, 0, 0, 0}, {128, 226, 35, 0, 0, 0}, {129, 46, 22, 0, 0, 0}, {130, 29, 13, 0, 0, 0}, {131, 223, 255, 0, 0, 0}, {132, 85, 14, 0, 0, 0}, {133, 6, 18, 0, 0, 0}, {134, 229, 43, 0, 0, 0}, {135, 203, 8, 0, 0, 0}, {136, 1, 22, 0, 0, 0}, {137, 195, 14, 0, 0, 0}, {138, 109, 36, 0, 0, 0}, {139, 168, 43, 3, 41, 42}, {140, 181, 41, 0, 0, 0}, {141, 47, 32, 0, 0, 0}, {142, 72, 243, 0, 0, 0}, {143, 131, 14, 0, 0, 0}, {144, 127, 93, 0, 0, 0}, {146, 103, 100, 0, 0, 0}, {147, 154, 36, 0, 0, 0}, {148, 178, 60, 0, 0, 0}, {149, 200, 30, 0, 0, 0}, {230, 163, 42, 0, 0, 0}, {231, 105, 40, 0, 0, 0}, {232, 151, 63, 0, 0, 0}, {233, 35, 182, 0, 0, 0}, {234, 150, 40, 0, 0, 0}, {241, 90, 32, 0, 0, 0}, {242, 104, 52, 0, 0, 0}, {243, 85, 53, 1, 52, 0}, {244, 95, 6, 0, 0, 0}, {245, 130, 2, 0, 0, 0}, {246, 184, 38, 0, 0, 0}, {247, 81, 19, 0, 0, 0}, {248, 8, 254, 3, 3, 4}, {249, 204, 36, 0, 0, 0}, {250, 49, 30, 0, 0, 0}, {251, 170, 18, 0, 0, 0}, {252, 44, 18, 0, 0, 0}, {253, 83, 51, 0, 0, 0}, {254, 46, 9, 0, 0, 0}, {256, 71, 42, 3, 8, 9}, {257, 131, 9, 0, 0, 0}, {258, 187, 32, 3, 0, 1}, {259, 122, 86, 0, 0, 0}, {260, 8, 28, 0, 0, 0}, {261, 244, 26, 0, 0, 0}, {262, 69, 31, 0, 0, 0}, {263, 133, 255, 0, 0, 0}, {264, 49, 28, 0, 0, 0}, {265, 26, 16, 0, 0, 0}, {266, 193, 255, 3, 2, 3}, {267, 35, 255, 3, 2, 3}, {268, 14, 4, 3, 2, 3}, {500, 203, 20, 0, 0, 0}, {501, 81, 7, 0, 0, 0}, {502, 51, 7, 0, 0, 0}, {503, 94, 31, 0, 0, 0}, {510, 81, 20, 0, 0, 0}, {520, 54, 23, 0, 0, 0}, {550, 215, 35, 0, 0, 0}, {551, 39, 14, 1, 12, 0}, {555, 103, 37, 1, 36, 0}, {560, 137, 47, 1, 44, 0}, {561, 202, 32, 0, 0, 0}, {565, 66, 12, 0, 0, 0}, {570, 39, 14, 1, 12, 0}, {575, 78, 3, 0, 0, 0}}
#endif

#include "../protocol.h"

#define MAVLINK_ENABLED_PX4_SHIFT

// ENUM DEFINITIONS


/** @brief Values used to indicate what values are transmitted */
#ifndef HAVE_ENUM_SHIFT_STATUS_VALUE_TYPE
#define HAVE_ENUM_SHIFT_STATUS_VALUE_TYPE
typedef enum SHIFT_STATUS_VALUE_TYPE
{
   SHIFT_STATUS_VALUE_BATTERY_REMAINING=1, /* 0% = 0, 100% = 100 | */
   SHIFT_STATUS_VALUE_BATTERY_VOLTAGE=2, /* In millivolts (1 = 1 millivolt | */
   SHIFT_STATUS_VALUE_BATTERY_CURRENT=3, /* In 10th milliamps, 1 = 10 milliamps | */
   SHIFT_STATUS_VALUE_LOAD=4, /* Load of CPU of the mainloop, 0 tot 100% | */
   SHIFT_STATUS_VALUE_PRESSURE=5, /* Pressure messured in millibars | */
   SHIFT_STATUS_VALUE_TEMPERATURE_PRESSURE=6, /* Celsius | */
   SHIFT_STATUS_VALUE_TEMPERATURE_INTERNAL=7, /* Celsius | */
   SHIFT_STATUS_VALUE_MOCAP_UPDATES=8, /* Mocap packets received per second | */
   SHIFT_STATUS_VALUE_RADIO_RSSI=9, /* Received Signal Strength Indication | */
   SHIFT_STATUS_VALUE_RADIO_NOISE=10, /* Noise of radio | */
   SHIFT_STATUS_VALUE_TYPE_ENUM_END=11, /*  | */
} SHIFT_STATUS_VALUE_TYPE;
#endif

/** @brief Indicates the status of the object */
#ifndef HAVE_ENUM_SHIFT_OBJECT_STATUS_VALUES
#define HAVE_ENUM_SHIFT_OBJECT_STATUS_VALUES
typedef enum SHIFT_OBJECT_STATUS_VALUES
{
   SHIFT_OBJECT_STATUS_IDLE=0, /* Object is in IDLE state | */
   SHIFT_OBJECT_STATUS_MANUAL=1, /* Object is in MANUAL state | */
   SHIFT_OBJECT_STATUS_NAVIGATOR=2, /* Object is in NAVIGATOR state | */
   SHIFT_OBJECT_STATUS_VALUES_ENUM_END=3, /*  | */
} SHIFT_OBJECT_STATUS_VALUES;
#endif

/** @brief What does the ESTOP status mean */
#ifndef HAVE_ENUM_SHIFT_ESTOP_STATUS_VALUES
#define HAVE_ENUM_SHIFT_ESTOP_STATUS_VALUES
typedef enum SHIFT_ESTOP_STATUS_VALUES
{
   SHIFT_ESTOP_STATUS_NONE=0, /* No ESTOP connected | */
   SHIFT_ESTOP_STATUS_INACTIVE=1, /* ESTOP not active | */
   SHIFT_ESTOP_STATUS_ACTIVE=2, /* ESTOP active | */
   SHIFT_ESTOP_STATUS_DISCONNECTED=3, /* ESTOP disconnected | */
   SHIFT_ESTOP_STATUS_VALUES_ENUM_END=4, /*  | */
} SHIFT_ESTOP_STATUS_VALUES;
#endif

/** @brief Navigator command for the navigator */
#ifndef HAVE_ENUM_NAVIGATOR_CMD
#define HAVE_ENUM_NAVIGATOR_CMD
typedef enum NAVIGATOR_CMD
{
   NAVIGATOR_CMD_PAUSE=1, /* Pause the navigator | */
   NAVIGATOR_CMD_START=2, /* Start the navigator | */
   NAVIGATOR_CMD_START_REVERSE=3, /* Reverse start the navigator | */
   NAVIGATOR_CMD_LOAD_PATH=4, /* Preload a path into the navigator | */
   NAVIGATOR_CMD_RESET_PATH=5, /* Reset the current loaded path in the navigator memory | */
   NAVIGATOR_CMD_DELETE_PATH=6, /* Delete the path from the SD storage | */
   NAVIGATOR_CMD_REQUEST_PATH_HASH=7, /* Request the hash of path at a specific index | */
   NAVIGATOR_CMD_REQUEST_SHOW_HASH=8, /* Request the hash of all paths combined | */
   NAVIGATOR_CMD_START_SIM=9, /* Start the path in simulation mode - forward | */
   NAVIGATOR_CMD_START_REVERSE_SIM=10, /* Start the path in simulation mode - reverse | */
   NAVIGATOR_CMD_TAKEOFF=11, /* Make the object perform a takeoff procedure | */
   NAVIGATOR_CMD_LAND=12, /* Make the object perform a takeoff procedure | */
   NAVIGATOR_CMD_TAKEOFF_SIM=13, /* Make the object perform a takeoff procedure - simulated | */
   NAVIGATOR_CMD_LAND_SIM=14, /* Make the object perform a takeoff procedure - simulated | */
   NAVIGATOR_CMD_ENUM_END=15, /*  | */
} NAVIGATOR_CMD;
#endif

/** @brief  */
#ifndef HAVE_ENUM_NAVIGATOR_STATE
#define HAVE_ENUM_NAVIGATOR_STATE
typedef enum NAVIGATOR_STATE
{
   NAVIGATOR_STATE_BOOT=1, /* System enters this state when boot | */
   NAVIGATOR_STATE_NO_PATH_LOADED=2, /* When there is no path loaded | */
   NAVIGATOR_STATE_PATH_LOADING=3, /* When loading a path | */
   NAVIGATOR_STATE_PATH_LOADING_ERROR=4, /* When loading a path fails | */
   NAVIGATOR_STATE_PATH_LOADING_OK=5, /* When loading a path is succeeded | */
   NAVIGATOR_STATE_PATH_MODE=6, /* When a path is running | */
   NAVIGATOR_STATE_PATH_MODE_SIM=7, /* When a path is running in simulation | */
   NAVIGATOR_STATE_ENUM_END=8, /*  | */
} NAVIGATOR_STATE;
#endif

/** @brief  */
#ifndef HAVE_ENUM_NAVIGATOR_SUBSTATE
#define HAVE_ENUM_NAVIGATOR_SUBSTATE
typedef enum NAVIGATOR_SUBSTATE
{
   NAVIGATOR_SUBSTATE_BOOT=1, /*  | */
   NAVIGATOR_SUBSTATE_PAUSED=2, /*  | */
   NAVIGATOR_SUBSTATE_RUNNING=3, /*  | */
   NAVIGATOR_SUBSTATE_RUNNING_REVERSE=4, /*  | */
   NAVIGATOR_SUBSTATE_DONE=5, /*  | */
   NAVIGATOR_SUBSTATE_TAKEOFF=6, /*  | */
   NAVIGATOR_SUBSTATE_LANDING=7, /*  | */
   NAVIGATOR_SUBSTATE_ENUM_END=8, /*  | */
} NAVIGATOR_SUBSTATE;
#endif

/** @brief  */
#ifndef HAVE_ENUM_NAVIGATOR_SIMULATION_STATE
#define HAVE_ENUM_NAVIGATOR_SIMULATION_STATE
typedef enum NAVIGATOR_SIMULATION_STATE
{
   NAVIGATOR_SIMULATION_STATE_ENABLED=1, /*  | */
   NAVIGATOR_SIMULATION_STATE_DISABLED=2, /*  | */
   NAVIGATOR_SIMULATION_STATE_ENUM_END=3, /*  | */
} NAVIGATOR_SIMULATION_STATE;
#endif

/** @brief  */
#ifndef HAVE_ENUM_NAVIGATOR_SYSTEM_CMD_TYPE
#define HAVE_ENUM_NAVIGATOR_SYSTEM_CMD_TYPE
typedef enum NAVIGATOR_SYSTEM_CMD_TYPE
{
   NAVIGATOR_SYSTEM_CMD_TYPE_RESPONSE_TO_CMD=1, /*  | */
   NAVIGATOR_SYSTEM_CMD_TYPE_RESPONSE_TO_POINT=2, /*  | */
   NAVIGATOR_SYSTEM_CMD_TYPE_ENUM_END=3, /*  | */
} NAVIGATOR_SYSTEM_CMD_TYPE;
#endif

/** @brief  */
#ifndef HAVE_ENUM_NAVIGATOR_SYSTEM_CMD_RESPONSE
#define HAVE_ENUM_NAVIGATOR_SYSTEM_CMD_RESPONSE
typedef enum NAVIGATOR_SYSTEM_CMD_RESPONSE
{
   NAVIGATOR_SYSTEM_CMD_RESPONSE_OK=1, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_NOT_OK=2, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_ENUM_END=3, /*  | */
} NAVIGATOR_SYSTEM_CMD_RESPONSE;
#endif

/** @brief  */
#ifndef HAVE_ENUM_NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL
#define HAVE_ENUM_NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL
typedef enum NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL
{
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_NO_DETAIL=1, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_UNKNOWN_COMMAND=2, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_SD_WRITE_ERROR=3, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_SD_READ_ERROR=4, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_SD_VERIFY_ERROR=5, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_PATH_INDEX_TO_LARGE=6, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_POINT_INDEX_TO_LARGE=7, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_WRONG_SUBSTATE=8, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_NO_MOCAP=9, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_STARTPOINT_TO_FAR=10, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_ALREADY_RUNNING=11, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_ALREADY_RUNNING_REV=12, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_ALREADY_PAUSED=13, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_PATH_EMPTY=14, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_INCONSISTENCY_IN_POINT=15, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_NO_VALID_POINT_IN_PATH=16, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_PATHID_NOT_STARTID=17, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_NO_LOCKED_POSITION=18, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_ALREADY_IN_AIR=19, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_ALREADY_LANDED=20, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_NO_RESULT_FOR_TAKEOFF_PARAMETERS=21, /*  | */
   NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL_ENUM_END=22, /*  | */
} NAVIGATOR_SYSTEM_CMD_RESPONSE_DETAIL;
#endif

/** @brief Determine the yaw behaviour for the point we are traveling to */
#ifndef HAVE_ENUM_SHIFT_NAVIGATOR_YAW_BEHAVIOUR_ENUM
#define HAVE_ENUM_SHIFT_NAVIGATOR_YAW_BEHAVIOUR_ENUM
typedef enum SHIFT_NAVIGATOR_YAW_BEHAVIOUR_ENUM
{
   FACE_TRAVEL_DIRECTION=1, /* Look at the point we are flying to | */
   FACE_TRAVEL_DIRECTION_INVERTED=2, /* Look away from the point we are flying to | */
   FIXED_AT_YAW=3, /* Keep looking at the yaw in the point that we are traveling to | */
   INTERPOLATE=4, /* Interpolate from previous point yaw to the next point's yaw | */
   SHIFT_NAVIGATOR_YAW_BEHAVIOUR_ENUM_ENUM_END=5, /*  | */
} SHIFT_NAVIGATOR_YAW_BEHAVIOUR_ENUM;
#endif

/** @brief The type of the point */
#ifndef HAVE_ENUM_SHIFT_NAVIGATOR_POINT_TYPE_ENUM
#define HAVE_ENUM_SHIFT_NAVIGATOR_POINT_TYPE_ENUM
typedef enum SHIFT_NAVIGATOR_POINT_TYPE_ENUM
{
   POINT=1, /* The point is just a point | */
   ARC_CW=2, /* The point is the center of an ARC | */
   ARC_CCW=3, /* The point is the center of an ARC | */
   SHIFT_NAVIGATOR_POINT_TYPE_ENUM_ENUM_END=4, /*  | */
} SHIFT_NAVIGATOR_POINT_TYPE_ENUM;
#endif

// MAVLINK VERSION

#ifndef MAVLINK_VERSION
#define MAVLINK_VERSION 2
#endif

#if (MAVLINK_VERSION == 0)
#undef MAVLINK_VERSION
#define MAVLINK_VERSION 2
#endif

// MESSAGE DEFINITIONS
#include "./mavlink_msg_mav_shift_radiodog_identification_msg.h"
#include "./mavlink_msg_mav_shift_radiodog_ranging_request_msg.h"
#include "./mavlink_msg_mav_shift_radiodog_ranging_request_ack_msg.h"
#include "./mavlink_msg_mav_shift_radiodog_ranging_request_data_msg.h"
#include "./mavlink_msg_mav_shift_radiodog_module_cfg_msg.h"
#include "./mavlink_msg_mav_shift_radiodog_px4_position_small.h"
#include "./mavlink_msg_mav_shift_radiodog_debug_tag_info.h"
#include "./mavlink_msg_shift_navigator_cmd.h"
#include "./mavlink_msg_shift_att_pos.h"
#include "./mavlink_msg_shift_navigator_point.h"
#include "./mavlink_msg_shift_navigator_sim_point.h"
#include "./mavlink_msg_shift_system_status.h"
#include "./mavlink_msg_shift_system_cmd.h"
#include "./mavlink_msg_shiftw_system_status.h"

// base include
#include "../common/common.h"

#undef MAVLINK_THIS_XML_IDX
#define MAVLINK_THIS_XML_IDX 0

#if MAVLINK_THIS_XML_IDX == MAVLINK_PRIMARY_XML_IDX
# define MAVLINK_MESSAGE_INFO {MAVLINK_MESSAGE_INFO_HEARTBEAT, MAVLINK_MESSAGE_INFO_SYS_STATUS, MAVLINK_MESSAGE_INFO_SYSTEM_TIME, MAVLINK_MESSAGE_INFO_PING, MAVLINK_MESSAGE_INFO_CHANGE_OPERATOR_CONTROL, MAVLINK_MESSAGE_INFO_CHANGE_OPERATOR_CONTROL_ACK, MAVLINK_MESSAGE_INFO_AUTH_KEY, MAVLINK_MESSAGE_INFO_SET_MODE, MAVLINK_MESSAGE_INFO_PARAM_REQUEST_READ, MAVLINK_MESSAGE_INFO_PARAM_REQUEST_LIST, MAVLINK_MESSAGE_INFO_PARAM_VALUE, MAVLINK_MESSAGE_INFO_PARAM_SET, MAVLINK_MESSAGE_INFO_GPS_RAW_INT, MAVLINK_MESSAGE_INFO_GPS_STATUS, MAVLINK_MESSAGE_INFO_SCALED_IMU, MAVLINK_MESSAGE_INFO_RAW_IMU, MAVLINK_MESSAGE_INFO_RAW_PRESSURE, MAVLINK_MESSAGE_INFO_SCALED_PRESSURE, MAVLINK_MESSAGE_INFO_ATTITUDE, MAVLINK_MESSAGE_INFO_ATTITUDE_QUATERNION, MAVLINK_MESSAGE_INFO_LOCAL_POSITION_NED, MAVLINK_MESSAGE_INFO_GLOBAL_POSITION_INT, MAVLINK_MESSAGE_INFO_RC_CHANNELS_SCALED, MAVLINK_MESSAGE_INFO_RC_CHANNELS_RAW, MAVLINK_MESSAGE_INFO_SERVO_OUTPUT_RAW, MAVLINK_MESSAGE_INFO_MISSION_REQUEST_PARTIAL_LIST, MAVLINK_MESSAGE_INFO_MISSION_WRITE_PARTIAL_LIST, MAVLINK_MESSAGE_INFO_MISSION_ITEM, MAVLINK_MESSAGE_INFO_MISSION_REQUEST, MAVLINK_MESSAGE_INFO_MISSION_SET_CURRENT, MAVLINK_MESSAGE_INFO_MISSION_CURRENT, MAVLINK_MESSAGE_INFO_MISSION_REQUEST_LIST, MAVLINK_MESSAGE_INFO_MISSION_COUNT, MAVLINK_MESSAGE_INFO_MISSION_CLEAR_ALL, MAVLINK_MESSAGE_INFO_MISSION_ITEM_REACHED, MAVLINK_MESSAGE_INFO_MISSION_ACK, MAVLINK_MESSAGE_INFO_SET_GPS_GLOBAL_ORIGIN, MAVLINK_MESSAGE_INFO_GPS_GLOBAL_ORIGIN, MAVLINK_MESSAGE_INFO_PARAM_MAP_RC, MAVLINK_MESSAGE_INFO_MISSION_REQUEST_INT, MAVLINK_MESSAGE_INFO_SAFETY_SET_ALLOWED_AREA, MAVLINK_MESSAGE_INFO_SAFETY_ALLOWED_AREA, MAVLINK_MESSAGE_INFO_ATTITUDE_QUATERNION_COV, MAVLINK_MESSAGE_INFO_NAV_CONTROLLER_OUTPUT, MAVLINK_MESSAGE_INFO_GLOBAL_POSITION_INT_COV, MAVLINK_MESSAGE_INFO_LOCAL_POSITION_NED_COV, MAVLINK_MESSAGE_INFO_RC_CHANNELS, MAVLINK_MESSAGE_INFO_REQUEST_DATA_STREAM, MAVLINK_MESSAGE_INFO_DATA_STREAM, MAVLINK_MESSAGE_INFO_MANUAL_CONTROL, MAVLINK_MESSAGE_INFO_RC_CHANNELS_OVERRIDE, MAVLINK_MESSAGE_INFO_MISSION_ITEM_INT, MAVLINK_MESSAGE_INFO_VFR_HUD, MAVLINK_MESSAGE_INFO_COMMAND_INT, MAVLINK_MESSAGE_INFO_COMMAND_LONG, MAVLINK_MESSAGE_INFO_COMMAND_ACK, MAVLINK_MESSAGE_INFO_MANUAL_SETPOINT, MAVLINK_MESSAGE_INFO_SET_ATTITUDE_TARGET, MAVLINK_MESSAGE_INFO_ATTITUDE_TARGET, MAVLINK_MESSAGE_INFO_SET_POSITION_TARGET_LOCAL_NED, MAVLINK_MESSAGE_INFO_POSITION_TARGET_LOCAL_NED, MAVLINK_MESSAGE_INFO_SET_POSITION_TARGET_GLOBAL_INT, MAVLINK_MESSAGE_INFO_POSITION_TARGET_GLOBAL_INT, MAVLINK_MESSAGE_INFO_LOCAL_POSITION_NED_SYSTEM_GLOBAL_OFFSET, MAVLINK_MESSAGE_INFO_HIL_STATE, MAVLINK_MESSAGE_INFO_HIL_CONTROLS, MAVLINK_MESSAGE_INFO_HIL_RC_INPUTS_RAW, MAVLINK_MESSAGE_INFO_HIL_ACTUATOR_CONTROLS, MAVLINK_MESSAGE_INFO_OPTICAL_FLOW, MAVLINK_MESSAGE_INFO_GLOBAL_VISION_POSITION_ESTIMATE, MAVLINK_MESSAGE_INFO_VISION_POSITION_ESTIMATE, MAVLINK_MESSAGE_INFO_VISION_SPEED_ESTIMATE, MAVLINK_MESSAGE_INFO_VICON_POSITION_ESTIMATE, MAVLINK_MESSAGE_INFO_HIGHRES_IMU, MAVLINK_MESSAGE_INFO_OPTICAL_FLOW_RAD, MAVLINK_MESSAGE_INFO_HIL_SENSOR, MAVLINK_MESSAGE_INFO_SIM_STATE, MAVLINK_MESSAGE_INFO_RADIO_STATUS, MAVLINK_MESSAGE_INFO_FILE_TRANSFER_PROTOCOL, MAVLINK_MESSAGE_INFO_TIMESYNC, MAVLINK_MESSAGE_INFO_CAMERA_TRIGGER, MAVLINK_MESSAGE_INFO_HIL_GPS, MAVLINK_MESSAGE_INFO_HIL_OPTICAL_FLOW, MAVLINK_MESSAGE_INFO_HIL_STATE_QUATERNION, MAVLINK_MESSAGE_INFO_SCALED_IMU2, MAVLINK_MESSAGE_INFO_LOG_REQUEST_LIST, MAVLINK_MESSAGE_INFO_LOG_ENTRY, MAVLINK_MESSAGE_INFO_LOG_REQUEST_DATA, MAVLINK_MESSAGE_INFO_LOG_DATA, MAVLINK_MESSAGE_INFO_LOG_ERASE, MAVLINK_MESSAGE_INFO_LOG_REQUEST_END, MAVLINK_MESSAGE_INFO_GPS_INJECT_DATA, MAVLINK_MESSAGE_INFO_GPS2_RAW, MAVLINK_MESSAGE_INFO_POWER_STATUS, MAVLINK_MESSAGE_INFO_SERIAL_CONTROL, MAVLINK_MESSAGE_INFO_GPS_RTK, MAVLINK_MESSAGE_INFO_GPS2_RTK, MAVLINK_MESSAGE_INFO_SCALED_IMU3, MAVLINK_MESSAGE_INFO_DATA_TRANSMISSION_HANDSHAKE, MAVLINK_MESSAGE_INFO_ENCAPSULATED_DATA, MAVLINK_MESSAGE_INFO_DISTANCE_SENSOR, MAVLINK_MESSAGE_INFO_TERRAIN_REQUEST, MAVLINK_MESSAGE_INFO_TERRAIN_DATA, MAVLINK_MESSAGE_INFO_TERRAIN_CHECK, MAVLINK_MESSAGE_INFO_TERRAIN_REPORT, MAVLINK_MESSAGE_INFO_SCALED_PRESSURE2, MAVLINK_MESSAGE_INFO_ATT_POS_MOCAP, MAVLINK_MESSAGE_INFO_SET_ACTUATOR_CONTROL_TARGET, MAVLINK_MESSAGE_INFO_ACTUATOR_CONTROL_TARGET, MAVLINK_MESSAGE_INFO_ALTITUDE, MAVLINK_MESSAGE_INFO_RESOURCE_REQUEST, MAVLINK_MESSAGE_INFO_SCALED_PRESSURE3, MAVLINK_MESSAGE_INFO_FOLLOW_TARGET, MAVLINK_MESSAGE_INFO_CONTROL_SYSTEM_STATE, MAVLINK_MESSAGE_INFO_BATTERY_STATUS, MAVLINK_MESSAGE_INFO_AUTOPILOT_VERSION, MAVLINK_MESSAGE_INFO_LANDING_TARGET, MAVLINK_MESSAGE_INFO_ESTIMATOR_STATUS, MAVLINK_MESSAGE_INFO_WIND_COV, MAVLINK_MESSAGE_INFO_GPS_INPUT, MAVLINK_MESSAGE_INFO_GPS_RTCM_DATA, MAVLINK_MESSAGE_INFO_HIGH_LATENCY, MAVLINK_MESSAGE_INFO_VIBRATION, MAVLINK_MESSAGE_INFO_HOME_POSITION, MAVLINK_MESSAGE_INFO_SET_HOME_POSITION, MAVLINK_MESSAGE_INFO_MESSAGE_INTERVAL, MAVLINK_MESSAGE_INFO_EXTENDED_SYS_STATE, MAVLINK_MESSAGE_INFO_ADSB_VEHICLE, MAVLINK_MESSAGE_INFO_COLLISION, MAVLINK_MESSAGE_INFO_V2_EXTENSION, MAVLINK_MESSAGE_INFO_MEMORY_VECT, MAVLINK_MESSAGE_INFO_DEBUG_VECT, MAVLINK_MESSAGE_INFO_NAMED_VALUE_FLOAT, MAVLINK_MESSAGE_INFO_NAMED_VALUE_INT, MAVLINK_MESSAGE_INFO_STATUSTEXT, MAVLINK_MESSAGE_INFO_DEBUG, MAVLINK_MESSAGE_INFO_SETUP_SIGNING, MAVLINK_MESSAGE_INFO_BUTTON_CHANGE, MAVLINK_MESSAGE_INFO_PLAY_TUNE, MAVLINK_MESSAGE_INFO_CAMERA_INFORMATION, MAVLINK_MESSAGE_INFO_CAMERA_SETTINGS, MAVLINK_MESSAGE_INFO_STORAGE_INFORMATION, MAVLINK_MESSAGE_INFO_CAMERA_CAPTURE_STATUS, MAVLINK_MESSAGE_INFO_CAMERA_IMAGE_CAPTURED, MAVLINK_MESSAGE_INFO_FLIGHT_INFORMATION, MAVLINK_MESSAGE_INFO_MOUNT_ORIENTATION, MAVLINK_MESSAGE_INFO_LOGGING_DATA, MAVLINK_MESSAGE_INFO_LOGGING_DATA_ACKED, MAVLINK_MESSAGE_INFO_LOGGING_ACK, MAVLINK_MESSAGE_INFO_MAV_SHIFT_RADIODOG_IDENTIFICATION_MSG, MAVLINK_MESSAGE_INFO_MAV_SHIFT_RADIODOG_RANGING_REQUEST_MSG, MAVLINK_MESSAGE_INFO_MAV_SHIFT_RADIODOG_RANGING_REQUEST_ACK_MSG, MAVLINK_MESSAGE_INFO_MAV_SHIFT_RADIODOG_RANGING_REQUEST_DATA_MSG, MAVLINK_MESSAGE_INFO_MAV_SHIFT_RADIODOG_MODULE_CFG_MSG, MAVLINK_MESSAGE_INFO_MAV_SHIFT_RADIODOG_PX4_POSITION_SMALL, MAVLINK_MESSAGE_INFO_MAV_SHIFT_RADIODOG_DEBUG_TAG_INFO, MAVLINK_MESSAGE_INFO_SHIFT_NAVIGATOR_CMD, MAVLINK_MESSAGE_INFO_SHIFT_ATT_POS, MAVLINK_MESSAGE_INFO_SHIFT_NAVIGATOR_POINT, MAVLINK_MESSAGE_INFO_SHIFT_NAVIGATOR_SIM_POINT, MAVLINK_MESSAGE_INFO_SHIFT_SYSTEM_STATUS, MAVLINK_MESSAGE_INFO_SHIFT_SYSTEM_CMD, MAVLINK_MESSAGE_INFO_SHIFTW_SYSTEM_STATUS}
# if MAVLINK_COMMAND_24BIT
#  include "../mavlink_get_info.h"
# endif
#endif

#ifdef __cplusplus
}
#endif // __cplusplus
#endif // MAVLINK_PX4_SHIFT_H
